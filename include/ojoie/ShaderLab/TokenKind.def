// clang-format off
#ifndef TOK
#define TOK(ID)
#endif
#ifndef PUNCTUATOR
#define PUNCTUATOR(ID, SP) TOK(ID)
#endif
#ifndef KEYWORD
#define KEYWORD(ID, FLAG) TOK(kw_ ## ID)
#endif


TOK(unknown)
TOK(eof)
TOK(identifier)
TOK(integer_literal)
TOK(float_literal)
TOK(char_literal)
TOK(string_literal)

TOK(hlsl_source)

/*  check https://en.cppreference.com/w/cpp/language/punctuators  */
PUNCTUATOR(left_curly_bracket,   "{")
PUNCTUATOR(right_curly_bracket,  "}")
PUNCTUATOR(left_square_bracket,  "[")
PUNCTUATOR(right_square_bracket, "]")
PUNCTUATOR(left_bracket,         "(")
PUNCTUATOR(right_bracket,        ")")
PUNCTUATOR(semi,                 ";")
PUNCTUATOR(question_mark,        "?")
PUNCTUATOR(bitwise_not,          "~")
PUNCTUATOR(comma,                ",")


PUNCTUATOR(logical_not,          "!")
PUNCTUATOR(not_equal,           "!=")

PUNCTUATOR(hashtag,              "#")
PUNCTUATOR(double_hashtag,      "##")

PUNCTUATOR(colon,                ":")
PUNCTUATOR(double_colon,        "::")

PUNCTUATOR(period,               ".")
PUNCTUATOR(pointer_to_member1,  ".*")
PUNCTUATOR(ellipsis,           "...")

PUNCTUATOR(plus,                 "+")
PUNCTUATOR(increment,           "++")
PUNCTUATOR(plus_equal,          "+=")

PUNCTUATOR(minus,                "-")
PUNCTUATOR(minus_equal,         "-=")
PUNCTUATOR(decrement,           "--")
PUNCTUATOR(member_access,       "->")
PUNCTUATOR(pointer_to_member2, "->*")

PUNCTUATOR(star,                 "*")
PUNCTUATOR(mul_equal,           "*=")

PUNCTUATOR(division,             "/")
PUNCTUATOR(division_equal,      "/=")

PUNCTUATOR(mod,                  "%")
PUNCTUATOR(mod_equal,           "%=")

PUNCTUATOR(bitwise_xor,          "^")
PUNCTUATOR(xor_equal,           "^=")

PUNCTUATOR(ampersand,            "&")
PUNCTUATOR(logical_and,         "&&")
PUNCTUATOR(and_equal,           "&=")

PUNCTUATOR(bitwise_or,           "|")
PUNCTUATOR(logical_or,          "||")
PUNCTUATOR(or_equal,            "|=")

PUNCTUATOR(assign,               "=")
PUNCTUATOR(equal,               "==")

PUNCTUATOR(less,                 "<")
PUNCTUATOR(less_equal,          "<=")
PUNCTUATOR(left_shift,          "<<")
PUNCTUATOR(left_shift_equal,   "<<=")

PUNCTUATOR(greater,              ">")
PUNCTUATOR(right_shift,         ">>")
PUNCTUATOR(greater_equal,        ">=")
PUNCTUATOR(right_shift_equal,   ">>=")



KEYWORD(Shader,               KEYALL)
KEYWORD(Properties,           KEYALL)
KEYWORD(SubShader,            KEYALL)
KEYWORD(Tags,                 KEYALL)
KEYWORD(HLSLINCLUDE,          KEYALL)
KEYWORD(HLSLPROGRAM,          KEYALL)
KEYWORD(ENDHLSL,              KEYALL)
KEYWORD(Pass,                 KEYALL)

KEYWORD(2D,                   KEYALL)
KEYWORD(Cube,                 KEYALL)
KEYWORD(Color,                KEYALL)
KEYWORD(Float,                KEYALL)
KEYWORD(Range,                KEYALL)
KEYWORD(Integer,              KEYALL)
KEYWORD(Vector,               KEYALL) /// Vector4f

KEYWORD(ZTest,                KEYALL)
KEYWORD(Less,                 KEYALL)
KEYWORD(LEqual,               KEYALL)
KEYWORD(Equal,                KEYALL)
KEYWORD(GEqual,               KEYALL)
KEYWORD(Greater,              KEYALL)
KEYWORD(NotEqual,             KEYALL)
KEYWORD(Always,               KEYALL)
KEYWORD(Blend,                KEYALL)
KEYWORD(On,                   KEYALL)
KEYWORD(Off,                  KEYALL)
KEYWORD(One,                  KEYALL)
KEYWORD(Zero,                 KEYALL)
KEYWORD(SrcColor,             KEYALL)
KEYWORD(SrcAlpha,             KEYALL)
KEYWORD(SrcAlphaSaturate,     KEYALL)
KEYWORD(DstColor,             KEYALL)
KEYWORD(DstAlpha,             KEYALL)
KEYWORD(OneMinusSrcColor,     KEYALL)
KEYWORD(OneMinusSrcAlpha,     KEYALL)
KEYWORD(OneMinusDstColor,     KEYALL)
KEYWORD(OneMinusDstAlpha,     KEYALL)
KEYWORD(BlendOp,              KEYALL)
KEYWORD(Add,                  KEYALL)
KEYWORD(Sub,                  KEYALL)
KEYWORD(RevSub,               KEYALL)
KEYWORD(Min,                  KEYALL)
KEYWORD(Max,                  KEYALL)
/// TODO some logic BlendOp

KEYWORD(ColorMask,            KEYALL) /// RGB as identifier or int 0

KEYWORD(Cull,                 KEYALL)
KEYWORD(Back,                 KEYALL)
KEYWORD(Front,                KEYALL)
KEYWORD(ZWrite,               KEYALL)

KEYWORD(ZClip,                KEYALL)
KEYWORD(True,                 KEYALL)
KEYWORD(False,                KEYALL)

KEYWORD(alignas,              KEYALL)
KEYWORD(alignof,              KEYALL)
KEYWORD(and,                  KEYALL)
KEYWORD(and_eq,               KEYALL)
KEYWORD(asm,                  KEYALL)
KEYWORD(auto,                 KEYALL)
KEYWORD(bitand,               KEYALL)
KEYWORD(bitor,                KEYALL)
KEYWORD(bool,                 KEYALL)
KEYWORD(break,                KEYALL)
KEYWORD(case,                 KEYALL)
KEYWORD(catch,                KEYALL)
KEYWORD(char,                 KEYALL)
KEYWORD(char8_t,              KEYALL)
KEYWORD(char16_t,             KEYALL)
KEYWORD(char32_t,             KEYALL)
KEYWORD(class,                KEYALL)
KEYWORD(compl,                KEYALL)
KEYWORD(concept,              KEYALL)
KEYWORD(const,                KEYALL)
KEYWORD(consteval,            KEYALL)
KEYWORD(constexpr,            KEYALL)
KEYWORD(constinit,            KEYALL)
KEYWORD(const_cast,           KEYALL)
KEYWORD(continue,             KEYALL)
KEYWORD(co_await,             KEYALL)
KEYWORD(co_return,            KEYALL)
KEYWORD(co_yield,             KEYALL)
KEYWORD(decltype,             KEYALL)
KEYWORD(default,              KEYALL)
KEYWORD(delete,               KEYALL)
KEYWORD(do,                   KEYALL)
KEYWORD(double,               KEYALL)
KEYWORD(dynamic_cast,         KEYALL)
KEYWORD(else,                 KEYALL)
KEYWORD(enum,                 KEYALL)
KEYWORD(explicit,             KEYALL)
KEYWORD(export,               KEYALL)
KEYWORD(extern,               KEYALL)
KEYWORD(false,                KEYALL)
KEYWORD(float,                KEYALL)
KEYWORD(for,                  KEYALL)
KEYWORD(friend,               KEYALL)
KEYWORD(goto,                 KEYALL)
KEYWORD(if,                   KEYALL)
KEYWORD(inline,               KEYALL)
KEYWORD(int,                  KEYALL)
KEYWORD(long,                 KEYALL)
KEYWORD(mutable,              KEYALL)
KEYWORD(namespace,            KEYALL)
KEYWORD(new,                  KEYALL)
KEYWORD(noexcept,             KEYALL)
KEYWORD(not,                  KEYALL)
KEYWORD(not_eq,               KEYALL)
KEYWORD(nullptr,              KEYALL)
KEYWORD(operator,             KEYALL)
KEYWORD(or,                   KEYALL)
KEYWORD(or_eq,                KEYALL)
KEYWORD(private,              KEYALL)
KEYWORD(protected,            KEYALL)
KEYWORD(public,               KEYALL)
KEYWORD(register,             KEYALL)
KEYWORD(reinterpret_cast,     KEYALL)
KEYWORD(requires,             KEYALL)
KEYWORD(return,               KEYALL)
KEYWORD(short,                KEYALL)
KEYWORD(signed,               KEYALL)
KEYWORD(sizeof,               KEYALL)
KEYWORD(static,               KEYALL)
KEYWORD(static_assert,        KEYALL)
KEYWORD(static_cast,          KEYALL)
KEYWORD(struct ,              KEYALL)
KEYWORD(switch,               KEYALL)
KEYWORD(template,             KEYALL)
KEYWORD(this,                 KEYALL)
KEYWORD(thread_local,         KEYALL)
KEYWORD(throw,                KEYALL)
KEYWORD(true,                 KEYALL)
KEYWORD(try,                  KEYALL)
KEYWORD(typedef,              KEYALL)
KEYWORD(typeid,               KEYALL)
KEYWORD(typename,             KEYALL)
KEYWORD(union,                KEYALL)
KEYWORD(unsigned,             KEYALL)
KEYWORD(using ,               KEYALL)
KEYWORD(virtual,              KEYALL)
KEYWORD(void,                 KEYALL)
KEYWORD(volatile,             KEYALL)
KEYWORD(wchar_t,              KEYALL)
KEYWORD(while,                KEYALL)
KEYWORD(xor,                  KEYALL)
KEYWORD(xor_eq,               KEYALL)


KEYWORD(elif, KEYPREPROCESS)
KEYWORD(endif, KEYPREPROCESS)
KEYWORD(ifdef, KEYPREPROCESS)
KEYWORD(ifndef, KEYPREPROCESS)
KEYWORD(elifdef, KEYPREPROCESS)
KEYWORD(elifndef, KEYPREPROCESS)
KEYWORD(define, KEYPREPROCESS)
KEYWORD(undef, KEYPREPROCESS)
KEYWORD(include, KEYPREPROCESS)
KEYWORD(line, KEYPREPROCESS)
KEYWORD(error, KEYPREPROCESS)
KEYWORD(warning, KEYPREPROCESS)
KEYWORD(pragma, KEYPREPROCESS)
KEYWORD(defined, KEYPREPROCESS)
KEYWORD(__has_include, KEYPREPROCESS)
KEYWORD(__has_cpp_attribute, KEYPREPROCESS)


#undef KEYWORD
#undef PUNCTUATOR
#undef TOK
// clang-format on